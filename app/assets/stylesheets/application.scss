/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require simple_calendar
 *= require_tree .
 *= require_self
 */
@import "bootstrap";

@font-face{
  font-family: 'ipaexm';
  src: font-url('ipaexm.ttf') format('truetype');
}
body{
  font-family: ipaexm;
}

.red{
  color: #d44346;
}

.white{
  color: #fff;
}

.practice-font{
  color: #000;
}

main{
  background-color: #E6d8b3;
}

header{
  background-color: #9b322d;
  height: 70px;
  a{
    width: 70px;
    height: 70px;
    background: image-url("logo.jpg") center center / cover no-repeat;
    background-size: cover;
  }
}

footer{
  background-color: #1A0807;
  height: 50px;
  p{
    line-height: 50px;
  }
}

.feed-images{
  width: 100%;
  height: 0;
  padding-top: calc(350 / 1000 * 100%); /* calc(画像高さ ÷ 画像横幅 × 100%) */
  background: image-url("img/top.jpg") center center / cover no-repeat;
  background-size: cover;
}

.small-font{
  font-size: calc(7px + 0.25vw)
}

// カレンダーの色振り
.simple-calendar {
  .day {
    background: #fff9ee;
  }
  .wday-0 {
    background: #ffeaea;
    color: #ff505c;
  }
  .wday-1 {}
  .wday-2 {}
  .wday-3 {}
  .wday-4 {}
  .wday-5 {}
  .wday-6 {
    background: #d4ebff;
    color: #5984dc;
  }
  .today {
    background: #E6d8b3;
  }
  .past {}
  .future {}
  .start-date {}
  .prev-month {}
  .next-month {}
  .current-month {}
  .has-events {}
}

.calendar-table tr td:hover {
  background-color: #FFFF8c;    /* マウスオーバー時の行の背景色 */
}

/*========= ナビゲーションのためのCSS ===============*/

#g-nav{
  /*position:fixed;にし、z-indexの数値を小さくして最背面へ*/
  position:fixed;
	z-index: -1;
	opacity: 0;/*はじめは透過0*/
  /*ナビの位置と形状*/
	top:0;
	width:100%;
  height: 100vh;/*ナビの高さ*/
	background:#999;
  /*動き*/
	transition: all 0.3s;
}
/*アクティブクラスがついたら透過なしにして最前面へ*/
#g-nav.panelactive{
	opacity: 1;
	z-index:999;
}
/*ナビゲーション*/
#g-nav ul {
  display: none;
  /*ナビゲーション天地中央揃え*/
  position: absolute;
  z-index: 999;
  top:50%;
  left:50%;
  transform: translate(-50%,-50%);
}
#g-nav.panelactive ul {
    display: block;
}
/*リストのレイアウト設定*/
#g-nav li{
	list-style: none;
    text-align: center;
}
#g-nav li a{
	color: #333;
	text-decoration: none;
	padding:10px;
	display: block;
	text-transform: uppercase;
	letter-spacing: 0.1em;
	font-weight: bold;
}
/*========= ボタンのためのCSS ===============*/
.openbtn{
	position:fixed;
  z-index: 9999;/*ボタンを最前面に*/
	top:10px;
	right: 10px;
	cursor: pointer;
  width: 50px;
  height:50px;
}

/*×に変化*/
.openbtn span{
  display: inline-block;
  transition: all .4s;
  position: absolute;
  left: 14px;
  height: 3px;
  border-radius: 2px;
	background-color: #666;
  width: 45%;
}

.openbtn span:nth-of-type(1) {
	top:15px;
}
.openbtn span:nth-of-type(2) {
	top:23px;
}
.openbtn span:nth-of-type(3) {
	top:31px;
}
.openbtn.active span:nth-of-type(1) {
    top: 18px;
    left: 18px;
    transform: translateY(6px) rotate(-45deg);
    width: 30%;
}
.openbtn.active span:nth-of-type(2) {
	opacity: 0;
}
.openbtn.active span:nth-of-type(3){
    top: 30px;
    left: 18px;
    transform: translateY(-6px) rotate(45deg);
    width: 30%;
}

/*==================================================
スタート時は要素自体を透過0にするためのopacity:0;を指定する
===================================*/

.box{
	opacity: 0;
}

/*==================================================
動かしたい動き（今回は” ふわっ” を採用）
===================================*/

.fadeUp {
animation-name:fadeUpAnime;
animation-duration:0.5s;
animation-fill-mode:forwards;
opacity: 0;
}

@keyframes fadeUpAnime{
  from {
    opacity: 0;
	transform: translateY(100px);
  }

  to {
    opacity: 1;
	transform: translateY(0);
  }
}

// ボタン：hoverさせるとかぶさる
.hover05{
	overflow: hidden;
	transition: color .3s ease;
}
.hover05:before{
	content: '';
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	transform: scale(0,1);
	transform-origin: right top;
	background-color: #e5a400;
	transition: transform .3s ease;
	opacity: 0.3;
}
.hover05:hover{
	color: #fff;
}
.hover05:hover:before{
	transform-origin: left top;
	transform: scale(1,1);
}
//

// 影をつける
.wrapper{
  margin: 1rem auto;
  width: 100%;
}
.wrapper:hover {
  transform: translateY(-5px);
  box-shadow: 0 7px 8px 0 rgba(0,0,0,.08);
  transition: all .5s;
}
.card {
  border-radius: 5px;
  box-shadow: 0 2px 5px #ccc;
}

// 背景写真
.photo{
  background-size: cover;
  background-color:rgba(255,255,255,0.1);
  background-blend-mode:lighten;
}
.stage-right{
  background: image-url("img/stage-right.jpg") center center / cover no-repeat;
  background-position: 25% 20%;
}
.flute{
  background: image-url("img/flute.jpg") center center / cover no-repeat;
  background-position: 0% 10%;
}
.orchestra{
  background: image-url("img/orchestra.jpg") center center / cover no-repeat;
}
.stage-left{
  background: image-url("img/stage-left.jpg") center center / cover no-repeat;
  background-position: 40% 35%;
}
.kamaishi{
  background: image-url("img/kamaishi.jpg") center center / cover no-repeat;
}
.tutti{
  background: image-url("img/tutti.jpg") center center / cover no-repeat;
}
